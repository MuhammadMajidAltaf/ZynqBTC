// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.1
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sha256_transform (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ctx_transform_state_address0,
        ctx_transform_state_ce0,
        ctx_transform_state_we0,
        ctx_transform_state_d0,
        ctx_transform_state_q0,
        ctx_transform_state_address1,
        ctx_transform_state_ce1,
        ctx_transform_state_we1,
        ctx_transform_state_d1,
        ctx_transform_state_q1,
        data_transform_address0,
        data_transform_ce0,
        data_transform_q0,
        data_transform_address1,
        data_transform_ce1,
        data_transform_q1
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] ctx_transform_state_address0;
output   ctx_transform_state_ce0;
output   ctx_transform_state_we0;
output  [31:0] ctx_transform_state_d0;
input  [31:0] ctx_transform_state_q0;
output  [2:0] ctx_transform_state_address1;
output   ctx_transform_state_ce1;
output   ctx_transform_state_we1;
output  [31:0] ctx_transform_state_d1;
input  [31:0] ctx_transform_state_q1;
output  [5:0] data_transform_address0;
output   data_transform_ce0;
input  [7:0] data_transform_q0;
output  [5:0] data_transform_address1;
output   data_transform_ce1;
input  [7:0] data_transform_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] ctx_transform_state_address0;
reg ctx_transform_state_ce0;
reg ctx_transform_state_we0;
reg[31:0] ctx_transform_state_d0;
reg[2:0] ctx_transform_state_address1;
reg ctx_transform_state_ce1;
reg ctx_transform_state_we1;
reg[31:0] ctx_transform_state_d1;
reg[5:0] data_transform_address0;
reg data_transform_ce0;
reg[5:0] data_transform_address1;
reg data_transform_ce1;
reg   [4:0] ap_CS_fsm = 5'b00000;
wire   [5:0] k_address0;
reg    k_ce0;
wire   [31:0] k_q0;
wire   [31:0] m_q1;
reg   [31:0] reg_442;
wire   [31:0] m_q0;
wire   [31:0] i_cast_fu_447_p1;
reg   [31:0] i_cast_reg_1033;
reg   [5:0] data_transform_addr_reg_1038;
reg   [5:0] data_transform_addr_1_reg_1043;
wire   [4:0] tmp_2_fu_519_p2;
reg   [4:0] tmp_2_reg_1061;
reg   [7:0] data_transform_load_reg_1066;
reg   [7:0] data_transform_load_1_reg_1071;
reg   [7:0] data_transform_load_2_reg_1076;
reg   [7:0] data_transform_load_3_reg_1081;
wire   [31:0] indvar_cast_fu_538_p1;
reg   [31:0] indvar_cast_reg_1086;
wire   [5:0] tmp5_fu_542_p2;
reg   [5:0] tmp5_reg_1091;
wire   [31:0] tmp5_cast_fu_548_p1;
reg   [31:0] tmp5_cast_reg_1096;
wire   [31:0] i_1_cast_fu_580_p1;
reg   [31:0] i_1_cast_reg_1101;
wire   [0:0] exitcond6_fu_584_p2;
wire   [2:0] ctx_transform_state_addr_gep_fu_203_p3;
reg   [2:0] ctx_transform_state_addr_reg_1119;
wire   [2:0] ctx_transform_state_addr_1_gep_fu_216_p3;
reg   [2:0] ctx_transform_state_addr_1_reg_1124;
reg   [12:0] tmp_7_reg_1129;
wire   [18:0] tmp_8_fu_622_p1;
reg   [18:0] tmp_8_reg_1134;
wire   [31:0] tmp9_fu_640_p2;
reg   [31:0] tmp9_reg_1139;
reg   [13:0] tmp_16_reg_1154;
wire   [17:0] tmp_17_fu_689_p1;
reg   [17:0] tmp_17_reg_1159;
wire   [31:0] tmp10_fu_707_p2;
reg   [31:0] tmp10_reg_1164;
wire   [31:0] tmp11_fu_713_p2;
reg   [31:0] tmp11_reg_1169;
wire   [31:0] tmp12_fu_730_p2;
reg   [31:0] tmp12_reg_1174;
wire   [31:0] tmp_22_fu_736_p2;
reg   [31:0] tmp_22_reg_1179;
reg   [31:0] a_reg_1184;
reg   [31:0] b_reg_1190;
wire   [2:0] ctx_transform_state_addr_2_gep_fu_249_p3;
reg   [2:0] ctx_transform_state_addr_2_reg_1196;
wire   [2:0] ctx_transform_state_addr_3_gep_fu_258_p3;
reg   [2:0] ctx_transform_state_addr_3_reg_1201;
reg   [31:0] c_reg_1206;
reg   [31:0] d_reg_1212;
wire   [2:0] ctx_transform_state_addr_4_gep_fu_267_p3;
reg   [2:0] ctx_transform_state_addr_4_reg_1218;
wire   [2:0] ctx_transform_state_addr_5_gep_fu_276_p3;
reg   [2:0] ctx_transform_state_addr_5_reg_1223;
reg   [31:0] e_reg_1228;
reg   [31:0] f_reg_1234;
wire   [2:0] ctx_transform_state_addr_6_gep_fu_285_p3;
reg   [2:0] ctx_transform_state_addr_6_reg_1240;
wire   [2:0] ctx_transform_state_addr_7_gep_fu_294_p3;
reg   [2:0] ctx_transform_state_addr_7_reg_1245;
reg   [31:0] g_reg_1250;
reg   [31:0] h_reg_1256;
wire   [6:0] i_3_fu_752_p2;
reg   [6:0] i_3_reg_1265;
wire   [31:0] tmp_42_fu_776_p2;
reg   [31:0] tmp_42_reg_1270;
wire   [0:0] exitcond5_fu_746_p2;
wire   [31:0] tmp_56_fu_800_p2;
reg   [31:0] tmp_56_reg_1285;
wire   [31:0] tmp_23_fu_806_p2;
reg   [31:0] tmp_23_reg_1290;
wire   [31:0] tmp_24_fu_811_p2;
reg   [31:0] tmp_24_reg_1295;
wire   [31:0] tmp_25_fu_816_p2;
reg   [31:0] tmp_25_reg_1300;
wire   [31:0] tmp_s_fu_821_p2;
reg   [31:0] tmp_s_reg_1305;
wire   [31:0] tmp_28_fu_826_p2;
reg   [31:0] tmp_28_reg_1310;
wire   [31:0] tmp_39_fu_903_p2;
reg   [31:0] tmp_39_reg_1315;
reg   [31:0] k_load_reg_1320;
wire   [31:0] tmp14_fu_909_p2;
reg   [31:0] tmp14_reg_1325;
wire   [31:0] tmp15_fu_913_p2;
reg   [31:0] tmp15_reg_1330;
wire   [31:0] tmp16_fu_918_p2;
reg   [31:0] tmp16_reg_1335;
wire   [31:0] t1_fu_923_p2;
reg   [31:0] t1_reg_1340;
wire   [31:0] tmp_52_fu_999_p2;
reg   [31:0] tmp_52_reg_1346;
wire   [31:0] e_2_fu_1005_p2;
reg   [31:0] e_2_reg_1351;
wire   [31:0] tmp18_fu_1010_p2;
reg   [31:0] tmp18_reg_1356;
wire   [31:0] a_2_fu_1014_p2;
wire   [31:0] tmp_26_fu_1018_p2;
reg   [31:0] tmp_26_reg_1366;
wire   [31:0] tmp_27_fu_1023_p2;
reg   [31:0] tmp_27_reg_1371;
wire   [31:0] tmp_29_fu_1028_p2;
reg   [31:0] tmp_29_reg_1376;
reg   [5:0] m_address0;
reg    m_ce0;
reg    m_we0;
reg   [31:0] m_d0;
reg   [5:0] m_address1;
reg    m_ce1;
reg   [4:0] i_reg_322;
reg   [5:0] indvar_reg_333;
wire   [0:0] exitcond7_fu_513_p2;
reg   [31:0] h_1_reg_344;
reg   [31:0] h_2_reg_354;
reg   [31:0] g_2_reg_365;
reg   [31:0] f_2_reg_376;
reg   [31:0] d_1_reg_387;
reg   [31:0] d_2_reg_397;
reg   [31:0] c_2_reg_408;
reg   [31:0] b_2_reg_419;
reg   [6:0] i_2_reg_430;
wire   [31:0] tmp1_cast_fu_472_p1;
wire   [31:0] tmp2_cast_fu_485_p1;
wire   [31:0] tmp3_cast_fu_508_p1;
wire   [31:0] tmp_cast_fu_459_p1;
wire   [31:0] tmp7_cast_fu_569_p1;
wire   [31:0] tmp6_cast_fu_558_p1;
wire   [31:0] i_2_cast_fu_740_p1;
wire   [31:0] tmp_3_fu_525_p5;
wire   [6:0] tmp_fu_451_p3;
wire   [6:0] tmp1_fu_464_p3;
wire   [6:0] tmp2_fu_477_p3;
wire   [5:0] tmp_1_fu_490_p4;
wire   [6:0] tmp3_fu_500_p3;
wire   [5:0] tmp6_fu_552_p2;
wire   [5:0] tmp7_fu_563_p2;
wire   [6:0] indvar_cast1_fu_534_p1;
wire   [6:0] i_1_fu_574_p2;
wire   [16:0] tmp_5_fu_600_p1;
wire   [14:0] tmp_4_fu_590_p4;
wire   [21:0] tmp_10_fu_626_p4;
wire   [31:0] tmp_6_fu_604_p3;
wire   [31:0] tmp_11_fu_636_p1;
wire   [31:0] tmp_9_fu_646_p3;
wire   [6:0] tmp_14_fu_667_p1;
wire   [24:0] tmp_13_fu_657_p4;
wire   [28:0] tmp_19_fu_693_p4;
wire   [31:0] tmp_15_fu_671_p3;
wire   [31:0] tmp_20_fu_703_p1;
wire   [31:0] tmp_12_fu_652_p2;
wire   [31:0] tmp_18_fu_719_p3;
wire   [31:0] tmp_21_fu_725_p2;
wire   [31:0] not_fu_764_p2;
wire   [31:0] tmp_40_fu_758_p2;
wire   [31:0] tmp_41_fu_770_p2;
wire   [31:0] tmp_53_fu_782_p2;
wire   [31:0] tmp_54_fu_788_p2;
wire   [31:0] tmp_55_fu_794_p2;
wire   [5:0] tmp_31_fu_841_p1;
wire   [25:0] tmp_30_fu_831_p4;
wire   [10:0] tmp_34_fu_863_p1;
wire   [20:0] tmp_33_fu_853_p4;
wire   [24:0] tmp_37_fu_885_p1;
wire   [6:0] tmp_36_fu_875_p4;
wire   [31:0] tmp_38_fu_889_p3;
wire   [31:0] tmp_32_fu_845_p3;
wire   [31:0] tmp13_fu_897_p2;
wire   [31:0] tmp_35_fu_867_p3;
wire   [1:0] tmp_44_fu_937_p1;
wire   [29:0] tmp_43_fu_927_p4;
wire   [12:0] tmp_47_fu_959_p1;
wire   [18:0] tmp_46_fu_949_p4;
wire   [21:0] tmp_50_fu_981_p1;
wire   [9:0] tmp_49_fu_971_p4;
wire   [31:0] tmp_51_fu_985_p3;
wire   [31:0] tmp_45_fu_941_p3;
wire   [31:0] tmp17_fu_993_p2;
wire   [31:0] tmp_48_fu_963_p3;
reg   [4:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b00000;
parameter    ap_ST_st2_fsm_1 = 5'b1;
parameter    ap_ST_st3_fsm_2 = 5'b10;
parameter    ap_ST_st4_fsm_3 = 5'b11;
parameter    ap_ST_st5_fsm_4 = 5'b100;
parameter    ap_ST_st6_fsm_5 = 5'b101;
parameter    ap_ST_st7_fsm_6 = 5'b110;
parameter    ap_ST_st8_fsm_7 = 5'b111;
parameter    ap_ST_st9_fsm_8 = 5'b1000;
parameter    ap_ST_st10_fsm_9 = 5'b1001;
parameter    ap_ST_st11_fsm_10 = 5'b1010;
parameter    ap_ST_st12_fsm_11 = 5'b1011;
parameter    ap_ST_st13_fsm_12 = 5'b1100;
parameter    ap_ST_st14_fsm_13 = 5'b1101;
parameter    ap_ST_st15_fsm_14 = 5'b1110;
parameter    ap_ST_st16_fsm_15 = 5'b1111;
parameter    ap_ST_st17_fsm_16 = 5'b10000;
parameter    ap_ST_st18_fsm_17 = 5'b10001;
parameter    ap_ST_st19_fsm_18 = 5'b10010;
parameter    ap_ST_st20_fsm_19 = 5'b10011;
parameter    ap_ST_st21_fsm_20 = 5'b10100;
parameter    ap_ST_st22_fsm_21 = 5'b10101;
parameter    ap_ST_st23_fsm_22 = 5'b10110;
parameter    ap_ST_st24_fsm_23 = 5'b10111;
parameter    ap_ST_st25_fsm_24 = 5'b11000;
parameter    ap_ST_st26_fsm_25 = 5'b11001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_9 = 6'b1001;
parameter    ap_const_lv6_E = 6'b1110;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv6_30 = 6'b110000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_true = 1'b1;


sha256_transform_k #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
k_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( k_address0 ),
    .ce0( k_ce0 ),
    .q0( k_q0 )
);

sha256_transform_m #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
m_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( m_address0 ),
    .ce0( m_ce0 ),
    .we0( m_we0 ),
    .d0( m_d0 ),
    .q0( m_q0 ),
    .address1( m_address1 ),
    .ce1( m_ce1 ),
    .q1( m_q1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        a_reg_1184 <= ctx_transform_state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        b_2_reg_419 <= a_2_fu_1014_p2;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        b_2_reg_419 <= a_reg_1184;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        b_reg_1190 <= ctx_transform_state_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        c_2_reg_408 <= b_2_reg_419;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        c_2_reg_408 <= b_reg_1190;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        c_reg_1206 <= ctx_transform_state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        d_1_reg_387 <= d_2_reg_397;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        d_1_reg_387 <= d_reg_1212;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        d_2_reg_397 <= c_2_reg_408;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        d_2_reg_397 <= c_reg_1206;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        d_reg_1212 <= ctx_transform_state_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_transform_addr_1_reg_1043[2] <= tmp2_cast_fu_485_p1[2];
        data_transform_addr_1_reg_1043[3] <= tmp2_cast_fu_485_p1[3];
        data_transform_addr_1_reg_1043[4] <= tmp2_cast_fu_485_p1[4];
        data_transform_addr_1_reg_1043[5] <= tmp2_cast_fu_485_p1[5];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_transform_addr_reg_1038[2] <= tmp1_cast_fu_472_p1[2];
        data_transform_addr_reg_1038[3] <= tmp1_cast_fu_472_p1[3];
        data_transform_addr_reg_1038[4] <= tmp1_cast_fu_472_p1[4];
        data_transform_addr_reg_1038[5] <= tmp1_cast_fu_472_p1[5];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_transform_load_1_reg_1071 <= data_transform_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        data_transform_load_2_reg_1076 <= data_transform_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        data_transform_load_3_reg_1081 <= data_transform_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_transform_load_reg_1066 <= data_transform_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st21_fsm_20 == ap_CS_fsm)) begin
        e_2_reg_1351 <= e_2_fu_1005_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st14_fsm_13 == ap_CS_fsm)) begin
        e_reg_1228 <= ctx_transform_state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        f_2_reg_376 <= e_2_reg_1351;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        f_2_reg_376 <= e_reg_1228;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st14_fsm_13 == ap_CS_fsm)) begin
        f_reg_1234 <= ctx_transform_state_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        g_2_reg_365 <= f_2_reg_376;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        g_2_reg_365 <= f_reg_1234;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        g_reg_1250 <= ctx_transform_state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        h_1_reg_344 <= h_2_reg_354;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        h_1_reg_344 <= ctx_transform_state_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        h_2_reg_354 <= g_2_reg_365;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        h_2_reg_354 <= ctx_transform_state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        h_reg_1256 <= ctx_transform_state_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        i_1_cast_reg_1101[0] <= i_1_cast_fu_580_p1[0];
        i_1_cast_reg_1101[1] <= i_1_cast_fu_580_p1[1];
        i_1_cast_reg_1101[2] <= i_1_cast_fu_580_p1[2];
        i_1_cast_reg_1101[3] <= i_1_cast_fu_580_p1[3];
        i_1_cast_reg_1101[4] <= i_1_cast_fu_580_p1[4];
        i_1_cast_reg_1101[5] <= i_1_cast_fu_580_p1[5];
        i_1_cast_reg_1101[6] <= i_1_cast_fu_580_p1[6];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        i_2_reg_430 <= i_3_reg_1265;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        i_2_reg_430 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        i_3_reg_1265 <= i_3_fu_752_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        i_cast_reg_1033[0] <= i_cast_fu_447_p1[0];
        i_cast_reg_1033[1] <= i_cast_fu_447_p1[1];
        i_cast_reg_1033[2] <= i_cast_fu_447_p1[2];
        i_cast_reg_1033[3] <= i_cast_fu_447_p1[3];
        i_cast_reg_1033[4] <= i_cast_fu_447_p1[4];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        i_reg_322 <= tmp_2_reg_1061;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_322 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        indvar_cast_reg_1086[0] <= indvar_cast_fu_538_p1[0];
        indvar_cast_reg_1086[1] <= indvar_cast_fu_538_p1[1];
        indvar_cast_reg_1086[2] <= indvar_cast_fu_538_p1[2];
        indvar_cast_reg_1086[3] <= indvar_cast_fu_538_p1[3];
        indvar_cast_reg_1086[4] <= indvar_cast_fu_538_p1[4];
        indvar_cast_reg_1086[5] <= indvar_cast_fu_538_p1[5];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond7_fu_513_p2))) begin
        indvar_reg_333 <= ap_const_lv6_0;
    end else if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        indvar_reg_333 <= tmp5_reg_1091;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        k_load_reg_1320 <= k_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        reg_442 <= m_q0;
    end else if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm))) begin
        reg_442 <= m_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st20_fsm_19 == ap_CS_fsm)) begin
        t1_reg_1340 <= t1_fu_923_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        tmp10_reg_1164 <= tmp10_fu_707_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        tmp11_reg_1169 <= tmp11_fu_713_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        tmp12_reg_1174 <= tmp12_fu_730_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        tmp14_reg_1325 <= tmp14_fu_909_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        tmp15_reg_1330 <= tmp15_fu_913_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        tmp16_reg_1335 <= tmp16_fu_918_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st21_fsm_20 == ap_CS_fsm)) begin
        tmp18_reg_1356 <= tmp18_fu_1010_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        tmp5_cast_reg_1096[0] <= tmp5_cast_fu_548_p1[0];
        tmp5_cast_reg_1096[1] <= tmp5_cast_fu_548_p1[1];
        tmp5_cast_reg_1096[2] <= tmp5_cast_fu_548_p1[2];
        tmp5_cast_reg_1096[3] <= tmp5_cast_fu_548_p1[3];
        tmp5_cast_reg_1096[4] <= tmp5_cast_fu_548_p1[4];
        tmp5_cast_reg_1096[5] <= tmp5_cast_fu_548_p1[5];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        tmp5_reg_1091 <= tmp5_fu_542_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        tmp9_reg_1139 <= tmp9_fu_640_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        tmp_16_reg_1154 <= {{m_q0[ap_const_lv32_1F : ap_const_lv32_12]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        tmp_17_reg_1159 <= tmp_17_fu_689_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        tmp_22_reg_1179 <= tmp_22_fu_736_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond5_fu_746_p2))) begin
        tmp_23_reg_1290 <= tmp_23_fu_806_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond5_fu_746_p2))) begin
        tmp_24_reg_1295 <= tmp_24_fu_811_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond5_fu_746_p2))) begin
        tmp_25_reg_1300 <= tmp_25_fu_816_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        tmp_26_reg_1366 <= tmp_26_fu_1018_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        tmp_27_reg_1371 <= tmp_27_fu_1023_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond5_fu_746_p2))) begin
        tmp_28_reg_1310 <= tmp_28_fu_826_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        tmp_29_reg_1376 <= tmp_29_fu_1028_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        tmp_2_reg_1061 <= tmp_2_fu_519_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        tmp_39_reg_1315 <= tmp_39_fu_903_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_fu_746_p2))) begin
        tmp_42_reg_1270 <= tmp_42_fu_776_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st21_fsm_20 == ap_CS_fsm)) begin
        tmp_52_reg_1346 <= tmp_52_fu_999_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_fu_746_p2))) begin
        tmp_56_reg_1285 <= tmp_56_fu_800_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        tmp_7_reg_1129 <= {{m_q0[ap_const_lv32_1F : ap_const_lv32_13]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        tmp_8_reg_1134 <= tmp_8_fu_622_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond5_fu_746_p2))) begin
        tmp_s_reg_1305 <= tmp_s_fu_821_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st26_fsm_25 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ctx_transform_state_address0 assign process. ///
always @ (ap_CS_fsm or ctx_transform_state_addr_reg_1119 or ctx_transform_state_addr_2_reg_1196 or ctx_transform_state_addr_4_reg_1218 or ctx_transform_state_addr_6_reg_1240)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        ctx_transform_state_address0 = ctx_transform_state_addr_6_reg_1240;
    end else if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ctx_transform_state_address0 = ctx_transform_state_addr_4_reg_1218;
    end else if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        ctx_transform_state_address0 = ctx_transform_state_addr_2_reg_1196;
    end else if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        ctx_transform_state_address0 = ctx_transform_state_addr_reg_1119;
    end else if ((ap_ST_st14_fsm_13 == ap_CS_fsm)) begin
        ctx_transform_state_address0 = ap_const_lv32_6;
    end else if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        ctx_transform_state_address0 = ap_const_lv32_4;
    end else if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        ctx_transform_state_address0 = ap_const_lv32_2;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        ctx_transform_state_address0 = ap_const_lv32_0;
    end else begin
        ctx_transform_state_address0 = ctx_transform_state_addr_6_reg_1240;
    end
end

/// ctx_transform_state_address1 assign process. ///
always @ (ap_CS_fsm or ctx_transform_state_addr_1_reg_1124 or ctx_transform_state_addr_3_reg_1201 or ctx_transform_state_addr_5_reg_1223 or ctx_transform_state_addr_7_reg_1245)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        ctx_transform_state_address1 = ctx_transform_state_addr_7_reg_1245;
    end else if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ctx_transform_state_address1 = ctx_transform_state_addr_5_reg_1223;
    end else if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        ctx_transform_state_address1 = ctx_transform_state_addr_3_reg_1201;
    end else if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        ctx_transform_state_address1 = ctx_transform_state_addr_1_reg_1124;
    end else if ((ap_ST_st14_fsm_13 == ap_CS_fsm)) begin
        ctx_transform_state_address1 = ap_const_lv32_7;
    end else if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        ctx_transform_state_address1 = ap_const_lv32_5;
    end else if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        ctx_transform_state_address1 = ap_const_lv32_3;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        ctx_transform_state_address1 = ap_const_lv32_1;
    end else begin
        ctx_transform_state_address1 = ctx_transform_state_addr_7_reg_1245;
    end
end

/// ctx_transform_state_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond6_fu_584_p2)
begin
    if ((((ap_ST_st6_fsm_5 == ap_CS_fsm) & ~(exitcond6_fu_584_p2 == ap_const_lv1_0)) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st23_fsm_22 == ap_CS_fsm) | (ap_ST_st25_fsm_24 == ap_CS_fsm) | (ap_ST_st24_fsm_23 == ap_CS_fsm) | (ap_ST_st26_fsm_25 == ap_CS_fsm))) begin
        ctx_transform_state_ce0 = ap_const_logic_1;
    end else begin
        ctx_transform_state_ce0 = ap_const_logic_0;
    end
end

/// ctx_transform_state_ce1 assign process. ///
always @ (ap_CS_fsm or exitcond6_fu_584_p2)
begin
    if ((((ap_ST_st6_fsm_5 == ap_CS_fsm) & ~(exitcond6_fu_584_p2 == ap_const_lv1_0)) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st23_fsm_22 == ap_CS_fsm) | (ap_ST_st25_fsm_24 == ap_CS_fsm) | (ap_ST_st24_fsm_23 == ap_CS_fsm) | (ap_ST_st26_fsm_25 == ap_CS_fsm))) begin
        ctx_transform_state_ce1 = ap_const_logic_1;
    end else begin
        ctx_transform_state_ce1 = ap_const_logic_0;
    end
end

/// ctx_transform_state_d0 assign process. ///
always @ (ap_CS_fsm or tmp_23_reg_1290 or tmp_25_reg_1300 or tmp_28_reg_1310 or tmp_27_reg_1371)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        ctx_transform_state_d0 = tmp_28_reg_1310;
    end else if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ctx_transform_state_d0 = tmp_27_reg_1371;
    end else if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        ctx_transform_state_d0 = tmp_25_reg_1300;
    end else if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        ctx_transform_state_d0 = tmp_23_reg_1290;
    end else begin
        ctx_transform_state_d0 = tmp_27_reg_1371;
    end
end

/// ctx_transform_state_d1 assign process. ///
always @ (ap_CS_fsm or tmp_24_reg_1295 or tmp_s_reg_1305 or tmp_26_reg_1366 or tmp_29_reg_1376)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        ctx_transform_state_d1 = tmp_29_reg_1376;
    end else if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ctx_transform_state_d1 = tmp_s_reg_1305;
    end else if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        ctx_transform_state_d1 = tmp_26_reg_1366;
    end else if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        ctx_transform_state_d1 = tmp_24_reg_1295;
    end else begin
        ctx_transform_state_d1 = tmp_29_reg_1376;
    end
end

/// ctx_transform_state_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st23_fsm_22 == ap_CS_fsm) | (ap_ST_st25_fsm_24 == ap_CS_fsm) | (ap_ST_st24_fsm_23 == ap_CS_fsm) | (ap_ST_st26_fsm_25 == ap_CS_fsm))) begin
        ctx_transform_state_we0 = ap_const_logic_1;
    end else begin
        ctx_transform_state_we0 = ap_const_logic_0;
    end
end

/// ctx_transform_state_we1 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st23_fsm_22 == ap_CS_fsm) | (ap_ST_st25_fsm_24 == ap_CS_fsm) | (ap_ST_st24_fsm_23 == ap_CS_fsm) | (ap_ST_st26_fsm_25 == ap_CS_fsm))) begin
        ctx_transform_state_we1 = ap_const_logic_1;
    end else begin
        ctx_transform_state_we1 = ap_const_logic_0;
    end
end

/// data_transform_address0 assign process. ///
always @ (ap_CS_fsm or data_transform_addr_1_reg_1043 or tmp_cast_fu_459_p1)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_transform_address0 = data_transform_addr_1_reg_1043;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_transform_address0 = tmp_cast_fu_459_p1;
    end else begin
        data_transform_address0 = tmp_cast_fu_459_p1;
    end
end

/// data_transform_address1 assign process. ///
always @ (ap_CS_fsm or data_transform_addr_reg_1038 or tmp3_cast_fu_508_p1)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        data_transform_address1 = data_transform_addr_reg_1038;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        data_transform_address1 = tmp3_cast_fu_508_p1;
    end else begin
        data_transform_address1 = tmp3_cast_fu_508_p1;
    end
end

/// data_transform_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond7_fu_513_p2)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_513_p2)))) begin
        data_transform_ce0 = ap_const_logic_1;
    end else begin
        data_transform_ce0 = ap_const_logic_0;
    end
end

/// data_transform_ce1 assign process. ///
always @ (ap_CS_fsm or exitcond7_fu_513_p2)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_513_p2)))) begin
        data_transform_ce1 = ap_const_logic_1;
    end else begin
        data_transform_ce1 = ap_const_logic_0;
    end
end

/// k_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond5_fu_746_p2)
begin
    if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_fu_746_p2))) begin
        k_ce0 = ap_const_logic_1;
    end else begin
        k_ce0 = ap_const_logic_0;
    end
end

/// m_address0 assign process. ///
always @ (ap_CS_fsm or i_cast_reg_1033 or tmp5_cast_reg_1096 or i_1_cast_reg_1101 or tmp7_cast_fu_569_p1 or i_2_cast_fu_740_p1)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        m_address0 = i_1_cast_reg_1101;
    end else if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        m_address0 = i_cast_reg_1033;
    end else if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        m_address0 = i_2_cast_fu_740_p1;
    end else if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        m_address0 = tmp5_cast_reg_1096;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        m_address0 = tmp7_cast_fu_569_p1;
    end else begin
        m_address0 = i_1_cast_reg_1101;
    end
end

/// m_address1 assign process. ///
always @ (ap_CS_fsm or indvar_cast_reg_1086 or tmp6_cast_fu_558_p1)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        m_address1 = indvar_cast_reg_1086;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        m_address1 = tmp6_cast_fu_558_p1;
    end else begin
        m_address1 = indvar_cast_reg_1086;
    end
end

/// m_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond6_fu_584_p2 or exitcond5_fu_746_p2)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (exitcond6_fu_584_p2 == ap_const_lv1_0)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond5_fu_746_p2)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm))) begin
        m_ce0 = ap_const_logic_1;
    end else begin
        m_ce0 = ap_const_logic_0;
    end
end

/// m_ce1 assign process. ///
always @ (ap_CS_fsm or exitcond6_fu_584_p2)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (exitcond6_fu_584_p2 == ap_const_lv1_0)))) begin
        m_ce1 = ap_const_logic_1;
    end else begin
        m_ce1 = ap_const_logic_0;
    end
end

/// m_d0 assign process. ///
always @ (ap_CS_fsm or tmp_22_reg_1179 or tmp_3_fu_525_p5)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        m_d0 = tmp_22_reg_1179;
    end else if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        m_d0 = tmp_3_fu_525_p5;
    end else begin
        m_d0 = tmp_3_fu_525_p5;
    end
end

/// m_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm))) begin
        m_we0 = ap_const_logic_1;
    end else begin
        m_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond6_fu_584_p2 or exitcond5_fu_746_p2 or exitcond7_fu_513_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(ap_const_lv1_0 == exitcond7_fu_513_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
        ap_ST_st6_fsm_5 : 
            if (~(exitcond6_fu_584_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st13_fsm_12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st16_fsm_15 : 
            if (~(ap_const_lv1_0 == exitcond5_fu_746_p2)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        ap_ST_st17_fsm_16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
        ap_ST_st18_fsm_17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
        ap_ST_st19_fsm_18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st23_fsm_22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
        ap_ST_st24_fsm_23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
        ap_ST_st25_fsm_24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
        ap_ST_st26_fsm_25 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign a_2_fu_1014_p2 = (tmp18_reg_1356 + tmp_52_reg_1346);
assign ctx_transform_state_addr_1_gep_fu_216_p3 = ap_const_lv32_1;
assign ctx_transform_state_addr_2_gep_fu_249_p3 = ap_const_lv32_2;
assign ctx_transform_state_addr_3_gep_fu_258_p3 = ap_const_lv32_3;
assign ctx_transform_state_addr_4_gep_fu_267_p3 = ap_const_lv32_4;
assign ctx_transform_state_addr_5_gep_fu_276_p3 = ap_const_lv32_5;
assign ctx_transform_state_addr_6_gep_fu_285_p3 = ap_const_lv32_6;
assign ctx_transform_state_addr_7_gep_fu_294_p3 = ap_const_lv32_7;
assign ctx_transform_state_addr_gep_fu_203_p3 = ap_const_lv32_0;
assign e_2_fu_1005_p2 = (t1_reg_1340 + d_1_reg_387);
assign exitcond5_fu_746_p2 = (i_2_reg_430 == ap_const_lv7_40? 1'b1: 1'b0);
assign exitcond6_fu_584_p2 = (indvar_reg_333 == ap_const_lv6_30? 1'b1: 1'b0);
assign exitcond7_fu_513_p2 = (i_reg_322 == ap_const_lv5_10? 1'b1: 1'b0);
assign i_1_cast_fu_580_p1 = $unsigned(i_1_fu_574_p2);
assign i_1_fu_574_p2 = (indvar_cast1_fu_534_p1 + ap_const_lv7_10);
assign i_2_cast_fu_740_p1 = $unsigned(i_2_reg_430);
assign i_3_fu_752_p2 = (i_2_reg_430 + ap_const_lv7_1);
assign i_cast_fu_447_p1 = $unsigned(i_reg_322);
assign indvar_cast1_fu_534_p1 = $unsigned(indvar_reg_333);
assign indvar_cast_fu_538_p1 = $unsigned(indvar_reg_333);
assign k_address0 = i_2_cast_fu_740_p1;
assign not_fu_764_p2 = (f_2_reg_376 ^ ap_const_lv32_FFFFFFFF);
assign t1_fu_923_p2 = (tmp16_reg_1335 + tmp14_reg_1325);
assign tmp10_fu_707_p2 = (tmp_15_fu_671_p3 ^ tmp_20_fu_703_p1);
assign tmp11_fu_713_p2 = (tmp_12_fu_652_p2 + reg_442);
assign tmp12_fu_730_p2 = (reg_442 + tmp_21_fu_725_p2);
assign tmp13_fu_897_p2 = (tmp_38_fu_889_p3 ^ tmp_32_fu_845_p3);
assign tmp14_fu_909_p2 = (tmp_39_reg_1315 + k_load_reg_1320);
assign tmp15_fu_913_p2 = (tmp_42_reg_1270 + reg_442);
assign tmp16_fu_918_p2 = (tmp15_reg_1330 + h_1_reg_344);
assign tmp17_fu_993_p2 = (tmp_51_fu_985_p3 ^ tmp_45_fu_941_p3);
assign tmp18_fu_1010_p2 = (tmp_56_reg_1285 + t1_reg_1340);
assign tmp1_cast_fu_472_p1 = $unsigned(tmp1_fu_464_p3);
assign tmp1_fu_464_p3 = {{i_reg_322}, {ap_const_lv2_3}};
assign tmp2_cast_fu_485_p1 = $unsigned(tmp2_fu_477_p3);
assign tmp2_fu_477_p3 = {{i_reg_322}, {ap_const_lv2_2}};
assign tmp3_cast_fu_508_p1 = $unsigned(tmp3_fu_500_p3);
assign tmp3_fu_500_p3 = {{tmp_1_fu_490_p4}, {ap_const_lv1_1}};
assign tmp5_cast_fu_548_p1 = $unsigned(tmp5_fu_542_p2);
assign tmp5_fu_542_p2 = (indvar_reg_333 + ap_const_lv6_1);
assign tmp6_cast_fu_558_p1 = $unsigned(tmp6_fu_552_p2);
assign tmp6_fu_552_p2 = (indvar_reg_333 + ap_const_lv6_9);
assign tmp7_cast_fu_569_p1 = $unsigned(tmp7_fu_563_p2);
assign tmp7_fu_563_p2 = (indvar_reg_333 + ap_const_lv6_E);
assign tmp9_fu_640_p2 = (tmp_6_fu_604_p3 ^ tmp_11_fu_636_p1);
assign tmp_10_fu_626_p4 = {{m_q0[ap_const_lv32_1F : ap_const_lv32_A]}};
assign tmp_11_fu_636_p1 = $unsigned(tmp_10_fu_626_p4);
assign tmp_12_fu_652_p2 = (tmp9_reg_1139 ^ tmp_9_fu_646_p3);
assign tmp_13_fu_657_p4 = {{m_q0[ap_const_lv32_1F : ap_const_lv32_7]}};
assign tmp_14_fu_667_p1 = m_q0[6:0];
assign tmp_15_fu_671_p3 = {{tmp_14_fu_667_p1}, {tmp_13_fu_657_p4}};
assign tmp_17_fu_689_p1 = m_q0[17:0];
assign tmp_18_fu_719_p3 = {{tmp_17_reg_1159}, {tmp_16_reg_1154}};
assign tmp_19_fu_693_p4 = {{m_q0[ap_const_lv32_1F : ap_const_lv32_3]}};
assign tmp_1_fu_490_p4 = {{tmp_fu_451_p3[ap_const_lv32_6 : ap_const_lv32_1]}};
assign tmp_20_fu_703_p1 = $unsigned(tmp_19_fu_693_p4);
assign tmp_21_fu_725_p2 = (tmp10_reg_1164 ^ tmp_18_fu_719_p3);
assign tmp_22_fu_736_p2 = (tmp12_reg_1174 + tmp11_reg_1169);
assign tmp_23_fu_806_p2 = (a_reg_1184 + b_2_reg_419);
assign tmp_24_fu_811_p2 = (b_reg_1190 + c_2_reg_408);
assign tmp_25_fu_816_p2 = (c_reg_1206 + d_2_reg_397);
assign tmp_26_fu_1018_p2 = (d_reg_1212 + d_1_reg_387);
assign tmp_27_fu_1023_p2 = (e_reg_1228 + f_2_reg_376);
assign tmp_28_fu_826_p2 = (g_reg_1250 + h_2_reg_354);
assign tmp_29_fu_1028_p2 = (h_reg_1256 + h_1_reg_344);
assign tmp_2_fu_519_p2 = (i_reg_322 + ap_const_lv5_1);
assign tmp_30_fu_831_p4 = {{f_2_reg_376[ap_const_lv32_1F : ap_const_lv32_6]}};
assign tmp_31_fu_841_p1 = f_2_reg_376[5:0];
assign tmp_32_fu_845_p3 = {{tmp_31_fu_841_p1}, {tmp_30_fu_831_p4}};
assign tmp_33_fu_853_p4 = {{f_2_reg_376[ap_const_lv32_1F : ap_const_lv32_B]}};
assign tmp_34_fu_863_p1 = f_2_reg_376[10:0];
assign tmp_35_fu_867_p3 = {{tmp_34_fu_863_p1}, {tmp_33_fu_853_p4}};
assign tmp_36_fu_875_p4 = {{f_2_reg_376[ap_const_lv32_1F : ap_const_lv32_19]}};
assign tmp_37_fu_885_p1 = f_2_reg_376[24:0];
assign tmp_38_fu_889_p3 = {{tmp_37_fu_885_p1}, {tmp_36_fu_875_p4}};
assign tmp_39_fu_903_p2 = (tmp13_fu_897_p2 ^ tmp_35_fu_867_p3);
assign tmp_3_fu_525_p5 = {{{{{{data_transform_load_reg_1066}, {data_transform_load_1_reg_1071}}}, {data_transform_load_2_reg_1076}}}, {data_transform_load_3_reg_1081}};
assign tmp_40_fu_758_p2 = (f_2_reg_376 & g_2_reg_365);
assign tmp_41_fu_770_p2 = (h_2_reg_354 & not_fu_764_p2);
assign tmp_42_fu_776_p2 = (tmp_40_fu_758_p2 ^ tmp_41_fu_770_p2);
assign tmp_43_fu_927_p4 = {{b_2_reg_419[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_44_fu_937_p1 = b_2_reg_419[1:0];
assign tmp_45_fu_941_p3 = {{tmp_44_fu_937_p1}, {tmp_43_fu_927_p4}};
assign tmp_46_fu_949_p4 = {{b_2_reg_419[ap_const_lv32_1F : ap_const_lv32_D]}};
assign tmp_47_fu_959_p1 = b_2_reg_419[12:0];
assign tmp_48_fu_963_p3 = {{tmp_47_fu_959_p1}, {tmp_46_fu_949_p4}};
assign tmp_49_fu_971_p4 = {{b_2_reg_419[ap_const_lv32_1F : ap_const_lv32_16]}};
assign tmp_4_fu_590_p4 = {{m_q0[ap_const_lv32_1F : ap_const_lv32_11]}};
assign tmp_50_fu_981_p1 = b_2_reg_419[21:0];
assign tmp_51_fu_985_p3 = {{tmp_50_fu_981_p1}, {tmp_49_fu_971_p4}};
assign tmp_52_fu_999_p2 = (tmp17_fu_993_p2 ^ tmp_48_fu_963_p3);
assign tmp_53_fu_782_p2 = (c_2_reg_408 ^ d_2_reg_397);
assign tmp_54_fu_788_p2 = (tmp_53_fu_782_p2 & b_2_reg_419);
assign tmp_55_fu_794_p2 = (c_2_reg_408 & d_2_reg_397);
assign tmp_56_fu_800_p2 = (tmp_54_fu_788_p2 ^ tmp_55_fu_794_p2);
assign tmp_5_fu_600_p1 = m_q0[16:0];
assign tmp_6_fu_604_p3 = {{tmp_5_fu_600_p1}, {tmp_4_fu_590_p4}};
assign tmp_8_fu_622_p1 = m_q0[18:0];
assign tmp_9_fu_646_p3 = {{tmp_8_reg_1134}, {tmp_7_reg_1129}};
assign tmp_cast_fu_459_p1 = $unsigned(tmp_fu_451_p3);
assign tmp_fu_451_p3 = {{i_reg_322}, {ap_const_lv2_0}};
assign tmp_s_fu_821_p2 = (f_reg_1234 + g_2_reg_365);
always @ (posedge ap_clk)
begin
    i_cast_reg_1033[31:5] <= 27'b000000000000000000000000000;
    data_transform_addr_reg_1038[1:0] <= 2'b11;
    data_transform_addr_1_reg_1043[1:0] <= 2'b10;
    indvar_cast_reg_1086[31:6] <= 26'b00000000000000000000000000;
    tmp5_cast_reg_1096[31:6] <= 26'b00000000000000000000000000;
    i_1_cast_reg_1101[31:7] <= 25'b0000000000000000000000000;
    ctx_transform_state_addr_reg_1119[2:0] <= 3'b000;
    ctx_transform_state_addr_1_reg_1124[2:0] <= 3'b001;
    ctx_transform_state_addr_2_reg_1196[2:0] <= 3'b010;
    ctx_transform_state_addr_3_reg_1201[2:0] <= 3'b011;
    ctx_transform_state_addr_4_reg_1218[2:0] <= 3'b100;
    ctx_transform_state_addr_5_reg_1223[2:0] <= 3'b101;
    ctx_transform_state_addr_6_reg_1240[2:0] <= 3'b110;
    ctx_transform_state_addr_7_reg_1245[2:0] <= 3'b111;
end



endmodule //sha256_transform

